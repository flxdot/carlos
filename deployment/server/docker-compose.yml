services:

  api:
    build:
      context: ../..
      dockerfile: ./services/api/Dockerfile
    restart: unless-stopped
    environment:
      - API_CORS_ORIGINS=${API_CORS_ORIGINS}
      # Auth0
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
      # Database
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      # Sentry
      - SENTRY_DSN=${SENTRY_DSN}
      - SENTRY_ENVIRONMENT=prod
    depends_on:
      - db
    healthcheck:
      test: curl --fail http://localhost:8000 || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s

  frontend:
    build:
      context: ../..
      dockerfile: ./services/frontend/Dockerfile
    restart: unless-stopped
    environment:
      - VITE_APP_API_URL=https://api.${DOMAIN}
      - VITE_AUTH0_DOMAIN=${VITE_AUTH0_DOMAIN}
      - VITE_AUTH0_CLIENT_ID=${VITE_AUTH0_CLIENT_ID}
      - VITE_AUTH0_AUDIENCE=${VITE_AUTH0_AUDIENCE}
      - VITE_SENTRY_DSN=${VITE_SENTRY_DSN}
      - VITE_SENTRY_ENVIRONMENT=prod
    depends_on:
      - api
    healthcheck:
      test: curl --fail http://localhost || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    environment:
      - DOMAIN=${DOMAIN}
    ports:
      - 80:80
      - 443:443
    volumes:
      - /carlos/deployment/server/nginx/templates:/etc/nginx/templates:ro
      - /carlos/.carlos_data/letsencrypt:/etc/letsencrypt:ro
      - /carlos/.carlos_data/certbot:/var/www/certbot

  certbot:
    container_name: certbot
    image: certbot/certbot:latest
    depends_on:
      - nginx
    command: >-
             certonly --reinstall --webroot --webroot-path=/var/www/certbot
             -m ${EMAIL} --agree-tos --no-eff-email
             -d ${DOMAIN} -d api.${DOMAIN}
    volumes:
      - /carlos/.carlos_data/letsencrypt:/etc/letsencrypt
      - /carlos/.carlos_data/certbot:/var/www/certbot

  db:
    image: postgres:15
    restart: unless-stopped
    shm_size: 128mb
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    volumes:
      - /carlos/.carlos_data/postgres:/var/lib/postgresql/data
    expose:
      - 5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
