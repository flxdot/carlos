[tool.poetry]
name = "devtools"
version = "0.1.0"
description = "A collection of commonly used development dependencies among all python projects of this repository."
readme = "README.md"
license = "MIT"
authors = ["Felix FanghÃ¤nel"]


[tool.poetry.dependencies]
python = "^3.11"
# project management
bump-my-version = "^0.20.1"
# formatting
black = "^24.3.0"
isort = "^5.13.2"
# linting
ruff = "^0.5.0"
# static type checking
mypy = "^1.9.0"
# testing
pytest = "^8.1.1"
pytest-cov = "^5.0.0"
pytest-asyncio = "^0.23.6"
dirty-equals = "^0.7.0"
docker = "^7.1.0"
sqlalchemy = {extras = ["mypy"], version = "^2.0.29"}
greenlet = "^3.0.3" # required for testing of SQLAlchemy
pydantic = "^2.0.0"
loguru = "^0.7.2"
pydantic-settings = "^2.2.1"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.bumpversion]
current_version = "0.1.0"
commit = true
tag = false
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(\\-(?P<prerelease>[a-z0-9\\.]+))?"
serialize = [
	"{major}.{minor}.{patch}-{prerelease}",
	"{major}.{minor}.{patch}",
]

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = "version = \"{current_version}\""
replace = "version = \"{new_version}\""

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
line_length = 88

[tool.mypy]
plugins = []
exclude = ['.*_test\.py$']

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain about missing debug-only code:
    "def __repr__",
    "def __hash__",
    # Don't complain if imports are not covered:
    "^import .*",
    "^from .* import .*",
    "__all__ = .*",
    # Don't complain if tests don't hit defensive assertion code:
    "raise NotImplementedError",
    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    # Don't complain about guard clauses
    "if __name__ == .__main__.:",
]
omit = [
    # omit all tests
    "*_test.py",
]
