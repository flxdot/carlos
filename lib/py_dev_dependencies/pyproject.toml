[tool.poetry]
name = "devtools"
version = "0.4.0"
description = "A collection of commonly used development dependencies among all python projects of this repository."
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
authors = [
    { name = "Felix FanghÃ¤nel" },
]


[tool.poetry.dependencies]
python = "^3.11"
# formatting
black = "^23.7.0"
isort = "^5.12.0"
# linting
ruff = "^0.3.0"
# static type checking
mypy = "^1.4.1"
# testing
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.20.3"
dirty-equals = "^0.7.0"
docker = "^6.1.3"
greenlet = "^3.0.0" # required for testing of SQLAlchemy
sqlalchemy = {extras = ["mypy"], version = "^2.0.15"}
memray = "^1.11.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
line_length = 88

[tool.mypy]
plugins = [
    "sqlalchemy.ext.mypy.plugin",
    "pydantic.mypy"
]
exclude = ['.*_test\.py$']

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain about missing debug-only code:
    "def __repr__",
    "def __hash__",
    # Don't complain if imports are not covered:
    "^import .*",
    "^from .* import .*",
    "__all__ = .*",
    # Don't complain if tests don't hit defensive assertion code:
    "raise NotImplementedError",
    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod"
]
omit = [
    # omit all tests
    "*_test.py",
]
