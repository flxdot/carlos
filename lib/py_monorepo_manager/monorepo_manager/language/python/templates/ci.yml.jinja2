{% if project.continuous_integration.enabled -%}
# Do not edit! This file was generated via the /lib/py_monorepo_manager
# Any manual changes to this file will eventually be overwritten by CI
#
# This CI workflow will run on every push to a branch that has an open pull request
# not in draft mode.

name: "{{ context.file_stem }}"

# cancel previous runs if the branch is updated.
concurrency:
  group: {% raw %}${{ github.workflow }}-${{ github.head_ref || github.run_id }}{% endraw %}
  cancel-in-progress: true

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, review_requested]
    paths:
      - .github/workflows/{{ context.file_name }}
      - {{ project.path_from_root }}/**
      {%- for dependency in project.monorepo_dependencies %}
      - {{ dependency }}/**
      {%- endfor %}
      {%- for additional_file in project.continuous_integration.additional_files_to_watch %}
      - {{ additional_file }}
      {%- endfor %}


  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug
      useCache:
        description: 'Activate caching'
        required: true
        default: 'yes'
        type: choice
        options:
          - yes
          - no

jobs:

  test:
    timeout-minutes: 5
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    needs: install
    steps:
      {% macro include_runtime_install() %}{% include "ci.install_workflow.yml.jinja2" %}{% endmacro %}
      {{ include_runtime_install() | indent(6) }}

      - name: format
        run: make format
        working-directory: ./{{ project.path_from_root }}

      - uses: actions-js/push@master
        name: Push changes
        with:
          {%- raw  %}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.head_ref }}
          coauthor_email: ${{ github.event.pull_request.user.login }}@users.noreply.github.com
          coauthor_name: ${{ github.event.pull_request.user.login }}
          {%- endraw %}
          message: "format {{ project.path_from_root }}"

      {%- if project.ruff.enabled %}      # formatting first is beneficial because it may solve some linting errors

      - name: format
        run: make format
        working-directory: ./{{ project.path_from_root }}

      - name: linting
        run: make ruff
        working-directory: ./{{ project.path_from_root }}
      {%- endif %}

      {%- if project.mypy.enabled %}

      - name: type checking
        run: make mypy
        working-directory: ./{{ project.path_from_root }}
      {%- endif %}

      # installing the repository is required to register any pytest plugins
      # that are defined by the repository
      - name: install project
        run: poetry install --no-interaction --all-extras
        working-directory: ./{{ project.path_from_root }}

      - name: run tests
        run: make pytest
        working-directory: ./{{ project.path_from_root }}

      {%- if project.coverage.enabled %}

      - name: ensure test coverage
        run: make coverage
        working-directory: ./{{ project.path_from_root }}
      {%- endif %}

{% endif %}
