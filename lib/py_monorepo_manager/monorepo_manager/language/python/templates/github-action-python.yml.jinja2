{% if project.continuous_integration.enabled -%}
# Do not edit! This file was generated via the /lib/py_monorepo_manager
# Any manual changes to this file will eventually be overwritten by CI
#
# This CI workflow will run on every push to a branch that has an open pull request
# not in draft mode.

name: "test-{{ project.path_from_root }}"

# cancel previous runs if the branch is updated.
concurrency:
  group: {% raw %}${{ github.workflow }}-${{ github.head_ref || github.run_id }}{% endraw %}
  cancel-in-progress: true

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, review_requested]
    paths:
      - .github/workflows/{{ context.file_name }}
      - {{ project.path_from_root }}/**
      {%- for dependency in project.monorepo_dependencies %}
      - {{ dependency }}/**
      {%- endfor %}
      {%- for additional_file in project.continuous_integration.additional_files_to_watch %}
      - {{ additional_file }}
      {%- endfor %}


  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug
      useCache:
        description: 'Activate caching'
        required: true
        default: 'yes'
        type: choice
        options:
          - yes
          - no

jobs:

  test:
    timeout-minutes: 8
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
    {% include "ci.install.yml.jinja2" %}

    - name: Set up - Get changed files
      if: {% raw %}${{ !cancelled() }}{% endraw %}
      id: detect-changed-files
      uses: tj-actions/changed-files@v42
      with:
        files_yaml: |
          pyproject_toml:
            - {{ project.path_from_root }}/pyproject.toml
          poetry_lock:
            - {{ project.path_from_root }}/poetry.lock
          python_files:
            - {{ project.path_from_root }}/{{ project.root_package_name }}/**/*.py

    {%-  if project.is_library %}

    - name: Auto - version bump
      if: (steps.detect-changed-files.outputs.python_files_any_changed == 'true') && (steps.detect-changed-files.outputs.pyproject_toml_any_changed == 'false') && !cancelled()
      working-directory: ./{{ project.path_from_root }}
      run: "poetry run bump-my-version bump patch --no-tag --message 'Bump {{ project.path_from_root }} version: {current_version} â†’ {new_version}'"
    {%- endif %}

    # installing the repository is required to register any pytest plugins
    # that are defined by the repository
    - name: Set up - Install project
      run: poetry install --no-interaction --all-extras
      working-directory: ./{{ project.path_from_root }}

    {% if project.custom_ci_steps.post_install_steps %}{{ project.custom_ci_steps.post_install_steps | to_nice_yaml | indent(6) }}{% endif %}

    - name: Auto - format
      run: make format
      working-directory: ./{{ project.path_from_root }}

    {%- if project.ruff.enabled %}

    - name: Lint - ruff
      if: {% raw %}${{ !cancelled() }}{% endraw %}
      run: make ruff
      working-directory: ./{{ project.path_from_root }}

    {%- endif %}
    {% if project.custom_ci_steps.post_lint_steps %}{{ project.custom_ci_steps.post_lint_steps | to_nice_yaml | indent(6) }}{% endif %}

    {%- if project.mypy.enabled %}

    - name: Type checking - mypy
      if: {% raw %}${{ !cancelled() }}{% endraw %}
      run: make mypy
      working-directory: ./{{ project.path_from_root }}

    {%- endif %}
    {% if project.custom_ci_steps.post_type_checking_steps %}{{ project.custom_ci_steps.post_type_checking_steps | to_nice_yaml | indent(6) }}{% endif %}

    - name: Test - pytest
      if: {% raw %}${{ !cancelled() }}{% endraw %}
      run: make pytest
      working-directory: ./{{ project.path_from_root }}

    {%- if project.coverage.enabled %}

    - name: Test - coverage
      if: {% raw %}${{ !cancelled() }}{% endraw %}
      run: make coverage
      working-directory: ./{{ project.path_from_root }}
    {%- endif %}

    {% if project.custom_ci_steps.post_test_steps %}{{ project.custom_ci_steps.post_test_steps | to_nice_yaml | indent(6) }}{% endif %}

    {%- if project.deptry.enabled %}

    - name: Test - dependencies
      if: {% raw %}${{ !cancelled() }}{% endraw %}
      run: poetry run deptry . -v
      working-directory: ./{{ project.path_from_root }}
    {%- endif %}

    - name: Auto - commit pending changes
      if: {% raw %}${{ !cancelled() }}{% endraw %}
      run: |
        git add -A
        git commit -m "update {{ project.path_from_root }}" $_EMPTY || exit 0
    - name: Auto - push changes
      if: {% raw %}${{ !cancelled() }}{% endraw %}
      run: |
        git pull --rebase
        {% raw %}git push origin HEAD:refs/heads/${{ github.head_ref }} || exit 0{% endraw %}1
{% endif %}